# -*- coding: utf-8 -*-
"""exam07_pandas02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jGOmTPi_V4ekadl7coiuD1Mw_yQHRmPH
"""

import pandas as pd
import numpy as np

pd.set_option('display.max_columns',15) #컴럼을 있는거만 보여줌/적은 수만큼만 컬럼출력
pd.set_option('display.max_row',50) #초과할떄 전부를 보여주고 이하는 생략하여 보여준다

df = pd.read_csv('./datasets/auto-mpg.csv',names=['mpg','cylinders','displacement','horsepower','weight','acceleration','model year','origin','name'])
#csv를 pandas를 통해 읽어온다 컬럼은 names에 넣어준다
df

df.head(10) #앞에서 수만큼 default는 5

df.tail() #뒤에서 수만큼 default는 5

df.shape # 컬럼수와 로우수확인

df.info() #자료형이나 컬럼 널 존재유무 등등

df.dtypes #datatype확인

df['mpg'].dtypes #컬럼의 데이터타입확인

print(df.mpg.dtypes) #컬럼의 데이터타입확인

print(df.describe().T) #평균 빈도 최소값 최대값 등등

print(df.describe(include='all'))

df.count() #개수파악

unique_value = df['name'].value_counts() #유니크 값들을 확인하는 작업
print(type(unique_value))
print(unique_value)

print(df['model year'].value_counts())

print(df.mean) #평균

print(df.mpg.mean) #mpg의 평균

print(df.std)#표준편차

#print(df.corr())

mpg_to_kpl = 0.425144 #미터퍼갤런을 키로퍼리터로 추가
df['kpl'] = df['mpg'] *mpg_to_kpl
df.head()

df['kpl'] =df['kpl'].round(2) #반올림 소수점2자리
df

print(df['horsepower'].unique())

df['horsepower'].replace('?',np.nan,inplace=True) #horsepower의 결측치 ?값을 nan으로 바꿔준다
df.dropna(subset=['horsepower'],axis=0,inplace=True)
df['horsepower']=df['horsepower'].astype('float') #float타입으로 변환
df.info()

#print(df.corr())

df['origin'].unique()

df['origin'].replace({1:'USA',2:'EU',3:'JP'},inplace=True) #origin 을 문자로 바꾸는 작업
print(df['origin'].unique())
print(df['origin'].head())
print(df['origin'].value_counts())

df['origin'] =df['origin'].astype('str') #카테고리 타입으로 변환 문자열은str
print(df['origin'].dtypes)
print(df['origin'])

"""척도의 종류 - 명목척도,서열척도////연속척도(등간척도(int),비율척도(float))"""

count ,bin_dividers=np.histogram(df['horsepower'],bins=3) #구간을 나누는 기준점 작업 bins는 나눌것을 넣어준다
print(count)
print(bin_dividers)

bin_names=['저출력','보통출력','고출력']
df['hp_bin'] =pd.cut(x=df['horsepower'],bins=bin_dividers,labels=bin_names,include_lowest=True) #include_lowest=True는 이상 미만으로한다
df[['horsepower','hp_bin']].head(10)

df.info()

df1=df[['horsepower','hp_bin','origin']]
df1

df2=pd.get_dummies(df1)

df2

df = pd.DataFrame({'c1':['a','a','b','a','b'],
                   'c2':[1,1,1,2,2],
                   'c3':[1,1,2,2,2]})
df

df_dup = df.duplicated() #중복이면 true 아니면 false
df_dup

df_dup = df['c2'].duplicated() #특정행만
df_dup

df2=df.drop_duplicates() #복제삭제
df2

df2.info()

df2.iloc[1]

df2.loc[2]

df2=df2.reset_index(drop=True) #중간에 인덱스가 이빠졌으면 다시 세팅하여 바꾸어준다 인덱스를 열로 변환
df2

