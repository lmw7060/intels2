# -*- coding: utf-8 -*-
"""exam08_pandas03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1293Fgg8-9MjfkOlaGz3ljUOAecB-HSSB
"""

import pandas as pd

df = pd.DataFrame({'ten':[10,20,30,40,50],
                   'one':[1,-2,-4,5,6]})
df

for i in range(len(df)):
    if df.iloc[i,1] <0:
        df.iloc[i,1] =0
df

def relu(value):
    if value<0:
        value = 0
    # else:
    #     value =value
    return value

sr1=df.one.apply(relu)
sr1

sr1 = df.ten.apply(lambda x: x*3 -4)
sr1

df1 =pd.DataFrame({'a':['a0','a1','a2','a3'],
                   'b':['b0','b1','b2','b3'],
                   'c':['c0','c1','c2','c3']},index=[0,1,2,3])
df1
df2 =pd.DataFrame({'a':['a2','a3','a4','a5'],
                   'b':['b2','b3','b4','b5'],
                   'c':['c2','c3','c4','c5'],
                   'd':['d2','d3','d4','d5']},index=[2,3,4,5])
df2

result1=pd.concat([df1,df2])
#result1=pd.concat([df1,df2],ignore_index=)
result1.reset_index(drop=True,inplace=True)
result1

result2 = pd.concat([df1,df2],axis ='columns')
result2

result2 = pd.concat([df1,df2],axis ='columns', join='inner')#join='inner' --교집합 ,join='outter' -- 합집합
result2

df= pd.read_csv('./datasets/titanic.csv')
df

df = df.loc[:,['Age','Sex','Pclass','Fare','Survived']]
df.head()

print(df['Pclass'].unique())
print(df['Pclass'].value_counts)

grouped =df.groupby(['Pclass']) #그룹화작업
print(grouped)

grouped_df ={}
for key,group in grouped:
    print('key',key)
    print('length',len(group))
    grouped_df[key]=group
    print(group.head())

grouped_df.keys()

grouped_df[1]

average=grouped.mean()
average

min=grouped.min()
min

max = grouped.max()
max

grouped_two =df.groupby(['Pclass','Sex'])
for key,group in grouped_two:
    print('key',key)
    print('length',len(group))
    print(group.head())

grouped_two.mean()

group3f = grouped_two.get_group((3,'female'))
group3f

dfg=grouped_two.mean()
print(type(dfg))

dfg.loc[(1,'male')]

dfg.loc[1]

#dfg.loc[,'female'] #뒤에 있는 인덱스는 인덱싱되지않는다
dfg.xs('female',level='Sex') #xs를 써서 다음에 있는 것을 인덱싱
dfg.xs('male',level='Sex')

#pdf1 = pd.pivot_table(df,index='Pclass',columns='Sex',values='Age',aggfunc='mean')
pdf1 = pd.pivot_table(df,index='Pclass',columns='Sex',values=['Age','Fare'],aggfunc='mean')
pdf1

pdf2 = pd.pivot_table(df,index='Pclass',columns='Sex',values='Age',aggfunc=['mean','sum','std'])
pdf2

pdf3 = pd.pivot_table(df,index='Pclass',columns='Sex',values='Survived',aggfunc='mean')
pdf3

pdf4 =pd.pivot_table(df,index=['Pclass','Sex'],columns='Survived',values=['Age','Fare'],aggfunc=['mean','max'])
pdf4

print(pdf4.index)

print(pdf4.columns)

df

df_teenage=df.loc[(df.Age>=10) & (df.Age<20)] #비트연산해야함
df_teenage.head()

df_teenage['Survived'].sum()
df_teenage['Survived'].mean()

df.Survived.mean()

df_child = df.loc[df.Age<10]
df_child['Survived'].mean()

df_old = df.loc[df.Age>=60]
df_old.Survived.mean()

df_female_child =df.loc[(df.Age<10) & (df.Sex =='female')]
df_female_child.head()

df_female_child.mean()

titanic =pd.read_csv('./datasets/titanic.csv')
isin_filter = titanic['SibSp'].isin([2,4,5])
isin_filter

df_isin = titanic[isin_filter]
df_isin.head()

df_sibsp245 = titanic[(titanic.SibSp ==2)|(titanic.SibSp ==4)|(titanic.SibSp ==5)]
df_sibsp245.head()

df_man=df.loc[(df.Age<30) & (df.Sex =='male') &(df.Age>=20)]
df_man.Survived.mean()