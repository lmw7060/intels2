# -*- coding: utf-8 -*-
"""exam03_keras_xor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hDXo_zYGjlzv_nuoGAdSGdKsrehA1MmB
"""

import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import matplotlib.pyplot as plt

training_data = np.array([[0,0],[0,1],[1,0],[1,1]],'float32')
target_data = np.array([[0],[1],[1],[0]],'float32')

model = Sequential()
model.add(Dense(32, input_dim=2,activation='relu'))
model.add(Dense(1,activation='sigmoid'))
model.compile(loss='mse', optimizer='adam',metrics=['binary_accuracy']) #metrics분류정확도 #분류기는 loss가 중요하지않다
model.summary()
#weight 64 bias 32              weight 32 bias 1

fit_hist=model.fit(training_data,target_data,epochs=500, verbose=1)

plt.plot(fit_hist.history['loss'])
plt.show()

inp= list(map(int,input('두 개의 논리값을 입력하세요.\n').split()))
qwe = np.array(inp)
print('입력 값')
qwe = qwe.reshape(1,2)
print('결과 값',model.predict(qwe)[0][0].round())